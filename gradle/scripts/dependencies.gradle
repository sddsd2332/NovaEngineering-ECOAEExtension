apply from: 'gradle/scripts/helpers.gradle'

repositories {
    flatDir {
        dirs("libs")
    }
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    maven {
        url = uri("https://cfa2.cursemaven.com")
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        url = uri("https://maven.blamejared.com/")
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }
    compileOnly "org.jetbrains:annotations:17.0.0"

    implementation("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.+")
    implementation(rfg.deobf(files("libs/modularmachinery-2.1.0-main.jar")))
    implementation(rfg.deobf(files("libs/MMCE-ComponentModelHider-1.1-dev.jar")))
    implementation(rfg.deobf(files("libs/resourceloader-1.5.3-main.jar")))
    implementation(rfg.deobf(files("libs/lumenized-1.0.3-dev.jar")))
    implementation(rfg.deobf(files("libs/NotEnoughEnergistics-1.12.2-2.0.7.jar")))
    implementation(rfg.deobf(files("libs/HadEnoughItems_1.12.2-4.25.1.jar")))
    implementation(rfg.deobf(files("libs/theoneprobe-1.12-1.4.28.jar")))
    implementation(rfg.deobf(files("libs/FTBLib-5.4.7.2.jar")))
    implementation(rfg.deobf(files("libs/FTBUtilities-5.4.1.131.jar")))
    implementation(rfg.deobf(files("libs/ae2-uel-v0.56.7-dev.jar")))
    implementation(rfg.deobf(files("libs/FluidCraftforAE2-2.6.6-r.jar")))
    implementation(rfg.deobf(files("libs/MekanismEnergistics-0.1.5.jar")))
    implementation(rfg.deobf(files("libs/nae2-1.6.4-dev.jar")))
    implementation(rfg.deobf(files("libs/CodeChickenLib-1.12.2-3.2.3.358-universal.jar")))
    implementation(rfg.deobf(files("libs/Mekanism-CE-Unofficial-All-9.9.1.221-dev.jar")))
    implementation(rfg.deobf(files("libs/geckolib-forge-1.12.2-3.0.31.jar")))
    implementation(rfg.deobf(files("libs/!configanytime-3.0.jar")))
    implementation(rfg.deobf(files("libs/CrazyAE-1.12.2-v0.6.0.2.jar")))
}